// Shader downloaded from https://www.shadertoy.com/view/4dySzD
// written by shadertoy user xem
//
// Name: Crazy random shader
// Description: A super-weird random shader generated by http://xem.github.io/shaderandom
//    Try it out and share your best findings!
void mainImage(out vec4 fragColor, in vec2 fragCoord){fragColor = reflect(sin(step(max(vec4(0.4, 0.6, (fract((gl_FragCoord.y / iResolution.y)) / iGlobalTime), ceil(1.7)), vec4(0.0, 1.8, ((gl_FragCoord.x / iResolution.x) - 1.1), 1.7)), vec4((1.0 - 0.4), normalize((1.0 / 0.1)), (gl_FragCoord.x / iResolution.x), 1.6))), mod(pow(reflect(vec4(((gl_FragCoord.y / iResolution.y) / (0.2 / 0.0)), 0.5, (gl_FragCoord.x / iResolution.x), 0.6), sin(degrees(max(atan(radians(cos(max(vec4(((gl_FragCoord.y / iResolution.y) * iGlobalTime), 0.1, 1.8, log(min(0.4, ((1.9 + log2(1.5)) / 1.3)))), pow(normalize(vec4(1.2, 0.7, 0.1, (1.3 / 1.4))), step(vec4(degrees(acos((gl_FragCoord.y / iResolution.y))), 1.3, 0.0, 1.8), vec4((0.9 * 1.3), 1.2, (0.1 / 1.6), 0.0))))))), atan(mod(atan(reflect(pow(atan(vec4(1.3, sqrt((gl_FragCoord.x / iResolution.x)), min(float(iFrame), ((gl_FragCoord.x / iResolution.x) - 0.2)), (0.5 - iGlobalTime)), min(exp2(vec4(sign(1.6), 0.2, (0.5 - 0.5), 1.3)), sqrt(vec4(0.9, 0.7, 0.3, (0.0 / 0.2))))), vec4(0.0, 0.6, (gl_FragCoord.y / iResolution.y), 0.0)), vec4(0.1, ((gl_FragCoord.y / iResolution.y) / iGlobalTime), 0.4, ((iGlobalTime + 0.6) - 1.4))), vec4(1.4, 0.1, (1.1 + 0.6), ((0.8 / 0.4) + tan((gl_FragCoord.y / iResolution.y))))), vec4((gl_FragCoord.y / iResolution.y), float(iFrame), 0.6, 0.4)), vec4((gl_FragCoord.x / iResolution.x), (gl_FragCoord.x / iResolution.x), 0.1, 0.0)))))), degrees(acos(normalize(vec4(0.3, 1.7, min((gl_FragCoord.x / iResolution.x), 1.3), max(1.8, float(iFrame))))))), inversesqrt(atan(atan(vec4((0.8 * 1.5), 1.5, 0.6, 1.0), sin(reflect(vec4((gl_FragCoord.y / iResolution.y), min(0.9, 1.9), 0.4, cos(exp2(1.5))), vec4(iGlobalTime, 1.2, 0.4, 1.9)))), pow(vec4(0.5, (sqrt(float(iFrame)) + radians(1.6)), (gl_FragCoord.y / iResolution.y), (gl_FragCoord.x / iResolution.x)), max(pow(inversesqrt(pow(vec4(0.4, 1.3, 1.9, 1.5), vec4(0.9, (gl_FragCoord.y / iResolution.y), 1.1, 1.2))), step(floor(fract(max(step(min(vec4(1.3, 0.0, 0.1, iGlobalTime), vec4(1.4, 0.0, ((0.8 * (1.6 + 1.4)) + degrees(0.7)), 1.8)), inversesqrt(pow(floor(min(vec4(1.4, step((0.9 + 1.4), (gl_FragCoord.x / iResolution.x)), 0.3, (1.6 - 0.4)), vec4(0.7, (1.1 + 1.0), 0.5, (gl_FragCoord.y / iResolution.y)))), asin(step(max(atan(pow(vec4(0.5, (gl_FragCoord.y / iResolution.y), iGlobalTime, 0.6), vec4(1.4, 1.5, 1.4, 0.8)), abs(tan(vec4(sign(float(iFrame)), 0.9, 1.6, 0.8)))), vec4((gl_FragCoord.x / iResolution.x), 1.7, reflect(1.2, atan(1.8)), 1.5)), vec4((gl_FragCoord.y / iResolution.y), 1.2, 0.0, (1.0 * 1.3))))))), vec4(1.8, 1.3, 1.9, 1.5)))), vec4(0.8, iGlobalTime, min(0.1, 1.2), 0.3))), sin(vec4((0.9 + (0.6 * 1.8)), iGlobalTime, 0.3, float(iFrame)))))))));}